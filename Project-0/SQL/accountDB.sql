CREATE TABLE USER_TB
(
  USERID NUMBER NOT NULL PRIMARY KEY,
  FIRSTNAME VARCHAR2(40),
  LASTNAME VARCHAR2(10),
  USERNAME VARCHAR2(20) UNIQUE NOT NULL,
  PASS_WORD VARCHAR2(20) NOT NULL
);

CREATE TABLE ACCOUNT_TB
(
  ACC_ID NUMBER PRIMARY KEY,
  ACC_TYPE NUMBER NOT NULL,
  OWNER_ID NUMBER UNIQUE NOT NULL,
  BALANCE NUMBER NOT NULL,
  CONSTRAINT FK_ACCOUNT_TBUSER_TB FOREIGN KEY (OWNER_ID) REFERENCES USER_TB (USERID),
  CONSTRAINT FK_ACCOUNT_TBACC_TYPE_TB FOREIGN KEY (ACC_TYPE) REFERENCES ACC_TYPE_TB (TYPE_ID)
);

CREATE TABLE ACC_TYPE_TB
(
  TYPE_ID NUMBER PRIMARY KEY,
  TYPE VARCHAR2(10) UNIQUE NOT NULL
);
ALTER TABLE ACCOUNT_TB DROP UNIQUE (OWNER_ID);

CREATE SEQUENCE ACC_NUMB_SEQ
MINVALUE 1
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ADD_NEWUSER
BEFORE INSERT ON USER_TB
FOR EACH ROW
BEGIN 
SELECT ACC_NUMB_SEQ.NEXTVAL INTO :NEW.USERID FROM DUAL;
END;
/


CREATE SEQUENCE ACC_TYPE_SEQ;

CREATE OR REPLACE TRIGGER ADD_ACC_TYPE
BEFORE INSERT ON ACC_TYPE_TB
FOR EACH ROW
BEGIN 
SELECT ACC_TYPE_SEQ.NEXTVAL INTO :NEW.TYPE_ID FROM DUAL;
END;
/

CREATE SEQUENCE ACC_SEQ;

CREATE OR REPLACE TRIGGER ACC_TRIGGER
BEFORE INSERT ON ACCOUNT_TB
FOR EACH ROW
BEGIN 
SELECT ACC_SEQ.NEXTVAL INTO :NEW.ACC_ID FROM DUAL;
END;
/



CREATE OR REPLACE PROCEDURE GET_ALL_ACC
(ACC_CURSOR OUT SYS_REFCURSOR)
AS
BEGIN
OPEN ACC_CURSOR FOR SELECT * FROM ACCOUNT_TB;
END;
/


IN OUT
CREATE OR REPLACE PROCEDURE 
  ADD_USER(USR IN NUMBER,FN IN VARCHAR2,LN IN VARCHAR2,USRN IN VARCHAR2,PWD IN VARCHAR2)
IS
BEGIN
  INSERT INTO USER_TB(USERID,FIRSTNAME,LASTNAME,USERNAME,PASS_WORD) VALUES (USR,FN,LN,USRN,PWD);
  COMMIT;
END;
/


SELECT * FROM USER_TB;
SELECT * FROM ACCOUNT_TB;
SELECT * FROM ACC_TYPE_TB;

INSERT INTO ACC_TYPE_TB (TYPE) VALUES ('Savings');
INSERT INTO ACC_TYPE_TB (TYPE) VALUES ('Checking');
commit;


TRUNCATE TABLE USER_TB;
TRUNCATE TABLE ACCOUNT_TB;
TRUNCATE TABLE ACC_TYPE_TB;



DROP TABLE USER_TB;
DROP TABLE ACCOUNT_TB;
DROP TABLE ACC_TYPE_TB;
